/*
 * source   : jsfunction.min.js
 * Version  : beta 1.0
 * depends  : Jquery 1.4+
 * Download : http://www.itbbb.com/jsfunction/jsfunction.js
 *
 * Author   : baby
 * Blog     : http://www.itbbb.com
 * Wechat   : ITbeibei
 * Email    : babyisun@qq.com
 *
 * create   : 2014/03/29
 * update   : 2014/04/19
 *
 * message  : 如果发现任何bug、需要完善的代码，请发邮件或通过微信联系我，我很高兴与大家一起整理优雅的代码.
**/
if (typeof jQuery === "undefined") { throw new Error("JSFunction requires jQuery 1.4+") } $.extend({ JSFunction: { version: 1, author: "baby" } }); window.JSF = $.JSFunction; +function (b) { var a = { get: function (d) { var g = ""; var e = d + "="; if (document.cookie.length > 0) { var f = document.cookie.indexOf(e), c; if (f != -1) { f += e.length; c = document.cookie.indexOf(";", f); if (c == -1) { c = document.cookie.length } g = unescape(document.cookie.substring(f, c)) } } return g }, set: function (e, g, i, j, f) { var d = "", c = "", h = { day: 86400000, hour: 3600000, minute: 60000, seconds: 1000 }; if (i) { if (!j) { j = "hour" } d = new Date((new Date()).getTime() + i * h[j]); d = "; expires=" + d.toGMTString() } if (f) { c = "; domain=" + f } document.cookie = e + "=" + escape(g) + d + ";path=/" + c }, remove: function (c) { this.set(c, null, -1) } }; window.JSF.cookie = b.cookie = a }(jQuery); +function (h) { var b = { webkit: false, msie: false, mozilla: false }, c = window.navigator.userAgent.toLowerCase(); if (!h.browser) { var e = /(webkit)[ \/]([\w.]+)/, d = /(msie) ([\w.]+)/, g = /(mozilla)(?:.*? rv:([\w.]+))?/, a = function () { var i = e.exec(c) || d.exec(c) || c.indexOf("compatible") < 0 && g.exec(c) || []; return { browser: i[1] || "", version: i[2] || "0" } }, f = a(); if (f.browser) { if (f.browser == "mozilla" && (!!window.ActiveXObject || "ActiveXObject" in window)) { b.msie = true } else { b[f.browser] = true } b.version = f.version } } else { b = h.browser } b.ie6 = b.msie && (b.version == "6.0"); b.mobile = c.match(/ipad/i) == "ipad" || c.match(/iphone os/i) == "iphone os" || c.match(/midp/i) == "midp" || c.match(/rv:1.2.3.4/i) == "rv:1.2.3.4" || c.match(/ucweb/i) == "ucweb" || c.match(/android/i) == "android" || c.match(/windows ce/i) == "windows ce" || c.match(/windows mobile/i) == "windows mobile"; window.JSF.browser = h.browser = b }(jQuery); +function (a) { a.date = function (b) { return !b ? new Date() : new Date(b.replace(/-/g, "/")) }; Date.prototype.format = function (b) { var d = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), S: this.getMilliseconds() }; if (/(y+)/.test(b)) { b = b.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)) } for (var c in d) { if (new RegExp("(" + c + ")").test(b)) { b = b.replace(RegExp.$1, (RegExp.$1.length == 1) ? (d[c]) : (("00" + d[c]).substr(("" + d[c]).length))) } } return b }; Date.prototype.addMseconds = function (c) { var b = this.getTime() + c; return new Date(b) }; Date.prototype.addSeconds = function (b) { return this.addMseconds(b * 1000) }; Date.prototype.addMinutes = function (b) { return this.addSeconds(b * 60) }; Date.prototype.addHours = function (b) { return this.addMinutes(60 * b) }; Date.prototype.addDays = function (b) { return this.setDate(this.getDate() + b) }; Date.prototype.addWeeks = function (b) { return this.addDays(b * 7) }; Date.prototype.addMonths = function (b) { var c = this.getDate(); this.setMonth(this.getMonth() + b); if (this.getDate() < c) { this.setDate(0) } return this }; Date.prototype.addYears = function (c) { var b = this.getMonth(); this.setFullYear(this.getFullYear() + c); if (b < this.getMonth()) { this.setDate(0) } return this }; Date.prototype.getWeek = function (c) { var b = this.getDay(); if (!c || c == "周" || c == "星期") { var e = ["日", "一", "二", "三", "四", "五", "六"]; c = c || "周"; return c + e[b] } else { if (c == "En") { var d = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]; return d[b] } else { if (c == "Short") { var f = ["Sun.", "Mon.", "Tues.", "Wed.", "Thurs.", "Fri.", "Sat."]; return f[b] } } } }; Date.prototype.getAge = function () { var i = 0, b = a.date(), k = this.getFullYear(), e = this.getMonth(), j = this.getDate(), c = b.getFullYear(), d = b.getMonth(), h = b.getDate(); var f = c - k; if (f == 0) { i = 0 } else { if (f > 0) { var g = d - e; if (g == 0) { if ((h - j) < 0) { i = f - 1 } else { i = f } } else { if (g < 0) { i = f - 1 } else { i = f } } } else { i = "未出生" } } return i }; Date.prototype.isLeapYear = function () { var b = this.getFullYear(); return (b % 4 == 0 && (b % 100 != 0 || b % 400 == 0)) }; Date.prototype.daysInMonth = function () { var b = this.getMonth() + 1; if (b != 2) { return ((b <= 7 && b % 2 == 1) || (b > 7 && b % 2 == 0)) ? 31 : 30 } else { return this.isLeapYear() ? 29 : 28 } }; a.diffDate = function (d, c, b) { var e = { day: 86400000, hour: 3600000, minute: 60000, seconds: 1000 }; if (typeof d == "string") { d = a.date(d) } if (typeof c == "string") { c = a.date(c) } b = b || "day"; return parseInt((c.getTime() - d.getTime()) / parseInt(e[b])) } }(jQuery); +function (a) { String.prototype.replaceAll = function (c, b) { return this.replace(new RegExp(c, "gm"), b) }; String.prototype.trim = function () { return this.replace(/(^\s*)|(\s*$)/g, "") }; String.prototype.left = function (b) { return this.slice(0, b) }; String.prototype.right = function (b) { return this.slice(this.length - b) }; String.prototype.toDate = function (b) { var c = a.date(this); if (b) { return c.format(b) } return c }; String.prototype.htmlEncode = function () { var b = document.createElement("div"); (b.textContent != null) ? (b.textContent = this) : (b.innerText = this); var c = b.innerHTML; b = null; return c }; String.prototype.htmlDecode = function () { var b = document.createElement("div"); b.innerHTML = this; var c = b.innerText || b.textContent; b = null; return c } }(jQuery); +function (a) { Array.prototype.add = function (b) { this.push(b); return this }; Array.prototype.addRange = function (b) { var d = b.length; if (d) { for (var c = 0; c < d; c++) { this.push(b[c]) } } return this }; if (!Array.prototype.forEach) { Array.prototype.forEach = function (h, c) { var e, d; if (this == null) { throw new TypeError(" this is null or not defined") } var g = Object(this); var b = g.length >>> 0; if ({}.toString.call(h) != "[object Function]") { throw new TypeError(h + " is not a function") } if (c) { e = c } d = 0; while (d < b) { var f; if (d in g) { f = g[d]; h.call(e, f, d, g) } d++ } } } Array.prototype.clear = function () { if (this.length > 0) { this.splice(0, this.length) } return this }; Array.prototype.isEmpty = function () { return this.length == 0 }; if (!Array.prototype.indexOf) { Array.prototype.indexOf = function (d) { var c = this.length; if (c != 0) { for (var b = 0; b < c; b++) { if (this[b] == d) { return b } } } return -1 } } Array.prototype.contains = function (c) { var b = this.indexOf(c); return (b >= 0) }; Array.prototype.insert = function (b, c) { return this.splice(b, 0, c) }; Array.prototype.dequeue = function () { return this.shift() }; Array.prototype.remove = function (c) { var b = this.indexOf(c); if (b >= 0) { this.splice(b, 1) } return this }; Array.prototype.removeAt = function (b) { this.splice(b, 1); return this }; Array.prototype.reverse = function () { var d = new Array(), b = this.length; for (var c = b - 1; c > -1; c--) { d[d.length] = this[c] } return d }; Array.prototype.skip = function (e) { var c = this.length, b = new Array(); for (var d = e; d < c; d++) { if (d < c) { b[b.length] = this[d] } } return b }; Array.prototype.take = function (e) { var c = this.length, b = new Array(); for (var d = 0; d < e; d++) { if (d < c) { b[b.length] = this[d] } } return b }; Array.prototype.where = function (e) { if (!e) { return this } var c = this.length, b = new Array(); for (var d = 0; d < c; d++) { if (e(this[d], d)) { b[b.length] = this[d] } } return b }; Array.prototype.first = function (c) { var b = this.length; if (c != null) { return this.where(c).first() } else { if (b > 0) { return this[0] } else { return null } } }; Array.prototype.last = function (c) { var b = this.length; if (c != null) { return this.where(c).last() } else { if (b > 0) { return this[b - 1] } else { return null } } }; Array.prototype.any = function (d) { var b = this.length; for (var c = 0; c < b; c++) { if (d(this[c], c)) { return true } } return false }; Array.prototype.all = function (d) { var b = this.length; for (var c = 0; c < b; c++) { if (!d(this[c], c)) { return false } } return true }; Array.prototype.count = function (b) { if (b == null) { return this.length } else { return this.where(b).length } }; Array.prototype.orderBy = function (e) { var b = this.length, d = new Array(); for (var c = 0; c < b; c++) { d[d.length] = this[c] } d.sort(function (h, g) { var f = e(h); var i = e(g); return ((f < i) ? -1 : ((f > i) ? 1 : 0)) }); return d }; Array.prototype.orderByDescending = function (e) { var b = this.length, d = new Array(); for (var c = 0; c < b; c++) { d[d.length] = this[c] } d.sort(function (h, g) { var f = e(g); var i = e(h); return ((f < i) ? -1 : ((f > i) ? 1 : 0)) }); return d }; Array.prototype.max = function (g) { var f, b = this.length, e = this[0]; if (b == 0) { return null } if (b == 1) { return e } f = g(e, 0); for (var d = 1; d < b; d++) { var c = g(this[d], d); if (f < c) { e = this[d] } } return e }; Array.prototype.min = function (g) { var f, b = this.length, e = this[0]; if (b == 0) { return null } if (b == 1) { return e } f = g(e, 0); for (var d = 1; d < b; d++) { var c = g(this[d], d); if (f > c) { e = this[d] } } return e }; Array.prototype.sum = function (g) { var f = 0, b = this.length, e = this[0]; for (var d = 0; d < b; d++) { var c = g(this[d], d); if (/[^\d]/.test(c)) { throw new TypeError("类型错误"); return 0 } f += c } return f }; Array.prototype.distinct = function (h) { var g = this.length; if (g < 2) { return this } var d = new Object(), b = new Array(); var c = function (m) { var l = ""; if (typeof m == "object") { for (var i in m) { if (typeof m[i] == "object") { l += c(m[i]) } else { l += i + m[i] } } } else { l = m } return l }; if (!h) { h = function (i) { return i } } for (var e = 0; e < g; e++) { var f = this[e], k = h(f), j = c(k); if (d[j] == null) { d[j] = true; b[b.length] = f } } d = null; return b } }(jQuery); +function (b) { var a = { getArgs: function () { var e = new Object(), j = location.search.substring(1), h = j.split("&"), d = h.length; for (var f = 0; f < d; f++) { var k = h[f].indexOf("="); if (k == -1) { continue } var c = h[f].substring(0, k), g = h[f].substring(k + 1); g = decodeURIComponent(g); e[c] = g } return e }, parse: function (d) { var c = document.createElement("a"); d = d || document.location.href; c.href = d; return { source: d, protocol: c.protocol.replace(":", ""), host: c.hostname, port: c.port, query: c.search, file: (c.pathname.match(/([^\/?#]+)$/i) || [, ""])[1], hash: c.hash.replace("#", ""), path: c.pathname.replace(/^([^\/])/, "/$1"), relative: (c.href.match(/tps?:\/\/[^\/]+(.+)/) || [, ""])[1], segments: c.pathname.replace(/^\//, "").split("/") } }, open: function (c) { var d = b("#open_instead_Link"); if (!d.length) { d = b("<form id='open_instead_Link' action='this.href' target='_blank'></form> ").appendTo("body") } b("body").one("mouseover", function () { d.attr("action", c).submit() }) } }; window.JSF.url = b.url = a }(jQuery); +function (a) { a.fn.getFormData = function () { var c = a(this).find("input,select,textarea"); var h = "", b, f, d, g, e = 0; for (; e < c.length; e++) { f = c[e].type; g = c[e].getAttribute("data-read"); if (f == "button" || f == "submit" || f == "image" || f == "reset" || g == "ignore") { continue } d = c[e].name; if (h != "" && h.substring(h.length - 1, h.length) != "&") { h += "&" } if (f == "radio" || f == "checkbox") { if (b != d) { b = d; var j = ""; if (f == "radio") { j = a("input:radio[name='" + d + "']:checked").val(); h += d + "=" + (j ? encodeURIComponent(j) : "") } else { a("[name=" + d + "]:checked").each(function () { j += a(this).val() + "," }); h += d + "=" + (j ? j.substring(0, j.length - 1) : "") } } } else { h += d + "=" + encodeURIComponent(c[e].value) } } return h }; a.fn.placeholder = function (c) { if ("placeholder" in document.createElement("input")) { return this } else { var b = function (e, d) { if (d) { e.css({ display: "none" }) } else { e.css({ display: "inline" }) } }; return this.each(function () { var f = a(this), k = f.attr("placeholder"); if (!k) { return } var i = 5, e = f.outerHeight(), h = f.outerWidth(), j = a('<span class="jsf_placeholder">' + k + "</span>"), g = f.css("padding-left"); if (g) { i = g.match(/\d*/i)[0] * 1 } var d = { "margin-left": -(h - i), height: e, "line-height": e + "px", position: "absolute", color: "#cecfc9", "font-size": "12px" }; c = a.extend(d, c); j.css(c).click(function () { f.focus() }); b(j, f.val()); j.insertAfter(f); f.keyup(function (l) { b(j, a(this).val()) }).blur(function () { b(j, a(this).val()) }) }) } } }(jQuery);